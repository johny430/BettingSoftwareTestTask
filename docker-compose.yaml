version: '3.9'

services:
  line_provider_database:
    image: postgres:alpine
    env_file: line_provider/.env
    ports:
      - "5432:5432"
    volumes:
      - line_provider_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  bet_maker_database:
    image: postgres:alpine
    env_file: bet_maker/.env
    ports:
      - "5433:5432"
    volumes:
      - bet_makers_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s


  rabbitmq:
    image: rabbitmq:3-management
    env_file: line_provider/.env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running -q" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    env_file: bet_maker/.env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  line_provider:
    build:
      context: line_provider
      dockerfile: Dockerfile
    env_file: line_provider/.env
    command: [ "python", "src/main.py" ]
    ports:
      - "8080:8080"
    depends_on:
      line_provider_database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  bet_maker:
    build:
      context: bet_maker
      dockerfile: Dockerfile
    env_file: bet_maker/.env
    command: [ "python", "src/main.py" ]
    ports:
      - "8090:8090"
    depends_on:
      bet_maker_database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

  bet_maker_consumer:
    build:
      context: bet_maker
      dockerfile: Dockerfile
    env_file: bet_maker/.env
    command: [ "python", "src/messaging/main.py" ]
    depends_on:
      bet_maker_database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  line_provider_postgres_data:
  bet_makers_postgres_data:
  redis_data:
  rabbitmq_data: